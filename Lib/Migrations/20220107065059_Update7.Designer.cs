// <auto-generated />
using System;
using Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lib.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220107065059_Update7")]
    partial class Update7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lib.Entity.CangBayViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaCB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CangBay");
                });

            modelBuilder.Entity("Lib.Entity.ChuyenBayViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GIADICHVUEMBE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GIADICHVUNGUOILON")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GIADICHVUTREEM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GIAEMBE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GIANGUOILON")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GIATREEM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GioDen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioDi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACANGDEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACANGDI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaCB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayDen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayDi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGioDen")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGioDi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PICTURE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongEmBe")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongNguoiLon")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTreEm")
                        .HasColumnType("int");

                    b.Property<string>("TENCANGDEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TENCANGDI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TENHANG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("THUEPHISANBAYEMBE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("THUEPHISANBAYNGUOILON")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("THUEPHISANBAYTREEM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TONGTIEN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenMB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThoiGianBay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChuyenBay");
                });

            modelBuilder.Entity("Lib.Entity.HoaDonViewModel", b =>
                {
                    b.Property<Guid>("MaHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KhachMaKhach")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaKhach")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SL_EmBe")
                        .HasColumnType("int");

                    b.Property<int>("SL_NguoiLon")
                        .HasColumnType("int");

                    b.Property<int>("SL_TreEm")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaHD");

                    b.HasIndex("KhachMaKhach");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("Lib.Entity.KhachViewModel", b =>
                {
                    b.Property<Guid>("MaKhach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhach");

                    b.ToTable("Khach");
                });

            modelBuilder.Entity("Lib.Entity.LoTuyenViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CangDenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CangDiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id2")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaCangDen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaCangDi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CangDenId");

                    b.HasIndex("CangDiId");

                    b.ToTable("LoTuyen");
                });

            modelBuilder.Entity("Lib.Entity.TaiKhoanViewModel", b =>
                {
                    b.Property<Guid>("MaTK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTK");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("Lib.Entity.VeMayBayViewModel", b =>
                {
                    b.Property<int>("STT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ChuyenBayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HoaDonMaHD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiVe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaHD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("STT");

                    b.HasIndex("ChuyenBayId");

                    b.HasIndex("HoaDonMaHD");

                    b.ToTable("VeMayBay");
                });

            modelBuilder.Entity("Lib.Security.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Lib.Entity.HoaDonViewModel", b =>
                {
                    b.HasOne("Lib.Entity.KhachViewModel", "Khach")
                        .WithMany()
                        .HasForeignKey("KhachMaKhach");

                    b.Navigation("Khach");
                });

            modelBuilder.Entity("Lib.Entity.LoTuyenViewModel", b =>
                {
                    b.HasOne("Lib.Entity.CangBayViewModel", "CangDen")
                        .WithMany()
                        .HasForeignKey("CangDenId");

                    b.HasOne("Lib.Entity.CangBayViewModel", "CangDi")
                        .WithMany()
                        .HasForeignKey("CangDiId");

                    b.Navigation("CangDen");

                    b.Navigation("CangDi");
                });

            modelBuilder.Entity("Lib.Entity.VeMayBayViewModel", b =>
                {
                    b.HasOne("Lib.Entity.ChuyenBayViewModel", "ChuyenBay")
                        .WithMany()
                        .HasForeignKey("ChuyenBayId");

                    b.HasOne("Lib.Entity.HoaDonViewModel", "HoaDon")
                        .WithMany()
                        .HasForeignKey("HoaDonMaHD");

                    b.Navigation("ChuyenBay");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Lib.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Lib.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lib.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Lib.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
